# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

	# VM 1 : Firewall
	config.vm.define "firewall" do |firewall|
		firewall.vm.box = "debian/bullseye64"
		firewall.vm.network "public_network"
		firewall.vm.provision "shell", path: "./firewall.sh"
		firewall.vm.provider "virtualbox" do |virtualBox|
			virtualBox.name = "Vagrant - Firewall"
		end
	end 

  # VM 2 : Bastion
  config.vm.define "bastion" do |bastion|
		bastion.vm.box = "debian/bullseye64"
    bastion.vm.network "private_network", ip: "192.168.56.10", netmask: "255.255.248.0"
    bastion.vm.provision "shell", path: "./bastion.sh"
    bastion.vm.provider "virtualbox" do |virtualBox|
			virtualBox.name = "Vagrant - Bastion"
		end
  end

	# VM 3 : Load Balancer
	config.vm.define "load_balancer" do |load_balancer|
		load_balancer.vm.box = "debian/bullseye64"
		load_balancer.vm.network "private_network", ip: "192.168.56.11", netmask: "255.255.248.0"
		load_balancer.vm.provision "shell", path: "./load_balancer.sh"
		load_balancer.vm.provider "virtualbox" do |virtualBox|
			virtualBox.name = "Vagrant - Load Balancer"
		end
	end

	config.vm.provision "shell", inline: <<-SHELL
		echo -e "\n ------- WORDPRESS N째 1"
	SHELL

	# VM 4: WordPress
	config.vm.define "wordpress - 1" do |wordpress_1|
		wordpress_1.vm.box = "debian/bullseye64"
		wordpress_1.vm.network "private_network", ip: "192.168.56.21", netmask: "255.255.248.0"
		wordpress_1.vm.provision "shell", path: "wordpress.sh"
		wordpress_1.vm.provider "virtualbox" do |virtualBox|
			virtualBox.name = "Vagrant - WordPress n째1"
		end
	end

	config.vm.provision "shell", inline: <<-SHELL
		echo -e "\n ------- WORDPRESS N째 2"
	SHELL

	# VM 5: WordPress
	config.vm.define "wordpress - 2" do |wordpress_2|
		wordpress_2.vm.box = "debian/bullseye64"
		wordpress_2.vm.network "private_network", ip: "192.168.56.22", netmask: "255.255.248.0"
		wordpress_2.vm.provision "shell", path: "wordpress.sh"
		wordpress_2.vm.provider "virtualbox" do |virtualBox|
			virtualBox.name = "Vagrant - WordPress n째2"
		end
	end

end
